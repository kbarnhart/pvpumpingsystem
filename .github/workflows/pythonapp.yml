name: CI general checks

# General info on YAML syntax:
# - no tabs, only spaces

# Trigger the workflow on push or pull request
on: [push, pull_request]

jobs:
  build:

    # Decide which environnement the package will be tested on
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, vs2017-win2016]

    steps:
    # make a copy of concerned repository's code, for being used later. '@v1' get the stable version. Not clear why I still need to install pvpumpingsystem later..
    - name: Checkout
      uses: actions/checkout@v1

    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - name: Install dependencies
      run: |  # The pipe (|) is a tool allowing us to write multiple lines that execute independently without having to use multiple run commands or multiple jobs.
        python -m pip install --upgrade pip
        # pip install git+https://github.com/tylunel/pvlib-python@all_changes#egg=pvlib  # It is possible to specify the branch we want to download with @<branch>
        pip install git+https://github.com/pvlib/pvlib-python#egg=pvlib  # still useful because last changes are not in the last release that can be found on pip
        pip install git+https://github.com/tylunel/pvpumpingsystem#egg=pvpumpingsystem
        pip install matplotlib sklearn tqdm fluids numpy_financial

    - name: Lint with flake8
      run: |
        pip install flake8
        # Linter: raises error if code does not respect PEP8 style guidelines
        flake8 . --count --max-complexity=12 --max-line-length=79
        # '--exit-zero': treats all errors as warnings and force to exit with success
        # '--max-complexity=10': maximum complexity over which C901 is raised
        # check 'https://flake8.pycqa.org/en/latest/user/options.html#' for full list of options

    - name: Test with pytest
      run: |
        pip install pytest pytest-cov
        pytest pvpumpingsystem --cov=pvpumpingsystem --cov-report=xml --cov-report=html test/
        # pvpumpingsystemm is the folder in which the tests to run are located

    #- task: PublishCodeCoverageResults@1
    #  inputs:
    #    codeCoverageTool: Cobertura
    #    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
    #    reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'
